import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
import { logUserActivity } from "@/actions/actions";

export async function GET() {
  try {
    console.log("üîç Fetching profile stats...");

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å `logUserActivity()` ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡πá‡∏Ñ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    const logResult = await logUserActivity();
    console.log("üîÑ logUserActivity result:", logResult);

    if (logResult?.error) {
      console.warn("logUserActivity error:", logResult.error);
      return NextResponse.json({ error: logResult.error }, { status: 401 }); // ‡∏Ñ‡∏∑‡∏ô 401 ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    }

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    const sevenDaysAgo = new Date();
    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const totalProfiles = await prisma.profile.count();

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    const newProfilesLast7Days = await prisma.profile.count({
      where: { createdAt: { gte: sevenDaysAgo } },
    });

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    const activeUsersLast7Days = await prisma.userActivity.count({
      where: { loginAt: { gte: sevenDaysAgo } },
    });

    console.log("Profile stats:", {
      totalProfiles,
      newProfilesLast7Days,
      activeUsersLast7Days,
    });

    return NextResponse.json({
      totalProfiles,
      newProfilesLast7Days,
      activeUsersLast7Days,
    });
  } catch (error) {
    console.error("‚ùå Error fetching profile stats:", error);
    return NextResponse.json({ error: "Internal Server Error" }, { status: 500 });
  }
}
