generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id           String   @id @default(uuid())  // ใช้ id เป็น primary key
  clerkId      String   @unique               // คงไว้สำหรับ Clerk
  firstName    String
  lastName     String
  username     String   @unique
  email        String   @unique
  profileImage String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  foods        Food[]    // เปลี่ยนชื่อจาก landmarks เป็น foods
  favorites    Favorite[]
  activities   UserActivity[]
}

model Food {
  id          String     @id @default(uuid())
  name        String
  description String
  image       String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  profile     Profile    @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId   String    // อ้างอิงไปที่ Profile.id

  favorites   Favorite[]
}

model Favorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String   // อ้างอิงไปที่ Profile.id

  food      Food     @relation(fields: [foodId], references: [id], onDelete: Cascade)
  foodId    String   // อ้างอิงไปที่ Food.id
}

model UserActivity {
  id        String   @id @default(uuid())
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String   
  loginAt   DateTime @default(now())  
  updatedAt DateTime @updatedAt  // ใช้สำหรับติดตามสถานะออนไลน์

  @@index([profileId])
}


