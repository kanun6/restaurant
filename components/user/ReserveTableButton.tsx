"use client";

import { useState } from "react";
import { reserveTable, cancelReservation } from "@/actions/actions";
import { useRouter } from "next/navigation";

const ReserveTableButton = ({ tableId, isReserved }: { tableId: string; isReserved: boolean }) => {
  const router = useRouter();
  const [loading, setLoading] = useState(false);

  const handleReservation = async () => {
    console.log("üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞ ID:", tableId); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ tableId ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (!tableId) {
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞");
      return;
    }

    setLoading(true);
    const response = isReserved ? await cancelReservation(tableId) : await reserveTable(tableId);
    setLoading(false);

    if (response.success) {
      router.refresh();
    } else {
      alert(response.error);
    }
  };

  return (
    <button
      onClick={handleReservation}
      disabled={loading}
      className={`w-full py-2 rounded-lg font-semibold transition ${
        isReserved ? "bg-red-500 hover:bg-red-600 text-white" : "bg-blue-500 hover:bg-blue-600 text-white"
      }`}
    >
      {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..." : isReserved ? "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á" : "‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞"}
    </button>
  );
};

export default ReserveTableButton;
